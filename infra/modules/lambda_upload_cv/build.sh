#!/bin/bash

# ðŸ”¹ 1. Configurar variables
PACKAGE_DIR="$(pwd)/package"  # ðŸ“¦ Ahora estÃ¡ dentro del mismo mÃ³dulo
SERVICE_DIR="$(pwd)/../../../services/upload_cv"  # ðŸ“‚ Ruta al cÃ³digo fuente

echo "ðŸ“Œ Instalando dependencias en: $PACKAGE_DIR"
echo "ðŸ“Œ CÃ³digo fuente en: $SERVICE_DIR"

# ls -la "$PACKAGE_DIR"

# ðŸ”¹ 2. Eliminar paquetes previos
rm -rf "$PACKAGE_DIR"
mkdir -p "$PACKAGE_DIR"

# ðŸ”¹ 3. Ejecutar Docker con Amazon Linux 2 para instalar pymupdf
docker run --rm -v "$PACKAGE_DIR":/package -v "$SERVICE_DIR":/service --platform linux/amd64 amazonlinux:2 bash -c "
  yum install -y python3 pip &&
  pip3 install --upgrade pip &&
  pip3 install --upgrade -r requirements.txt -t /package
"

echo "âœ… Archivos instalados en package/:"
ls -la "$PACKAGE_DIR"

# ðŸ”¹ 4. Copiar `index.py` dentro del paquete
cp "$(pwd)/../../../services/upload_cv/index.py" "$PACKAGE_DIR"/

# ðŸ”¹ 5. Verificar contenido antes de comprimir
echo "âœ… Contenido de package/:"
ls -la "$PACKAGE_DIR"

rm -f $(pwd)/lambda_upload.zip

# ðŸ”¹ 6. Crear ZIP para Terraform
cd "$PACKAGE_DIR" && zip -r ../lambda_upload.zip .
echo "âœ… ZIP generado en: $(pwd)/../lambda_upload.zip"